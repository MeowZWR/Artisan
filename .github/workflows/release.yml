name: Create Release

on:
  push:
    tags:
      - '*-cn'
      - '!testing_*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.x.x'
      - name: Restore dependencies
        run: dotnet restore Artisan.sln
      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
      - name: Build
        run: |
          $ver = '${{ github.ref_name }}' -replace '-cn'
          invoke-expression "dotnet build Artisan.sln --no-restore --configuration Release --nologo -p:Version=$ver -p:FileVersion=$ver -p:AssemblyVersion=$ver"
      - name: write version into jsons
        run: |
          $ver = '${{ github.ref_name }}' -replace '-cn'
          $path = './Artisan/bin/Release/Artisan.json'
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json.AssemblyVersion = $ver
          $content = $json | ConvertTo-Json
          set-content -Path $path -Value $content
      - name: Archive
        run: Compress-Archive -Path Artisan/bin/Release/* -DestinationPath Artisan.zip
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            ./Artisan/bin/Release/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Artisan ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Artisan.zip
          asset_name: Artisan.zip
          asset_content_type: application/zip
      - name: Write out repo.json
        run: |
          $ver = '${{ github.ref_name }}'
          $verBase = $ver -replace '-cn$', ''
          $path = './repo.json'
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json[0].AssemblyVersion = $verBase
          $json[0].TestingAssemblyVersion = $verBase
          $json[0].DownloadLinkInstall = $json.DownloadLinkInstall -replace '[^/]+/Artisan.zip',"$ver/Artisan.zip"
          $json[0].DownloadLinkTesting = $json.DownloadLinkTesting -replace '[^/]+/Artisan.zip',"$ver/Artisan.zip"
          $json[0].DownloadLinkUpdate = $json.DownloadLinkUpdate -replace '[^/]+/Artisan.zip',"$ver/Artisan.zip"
          $content = $json | ConvertTo-Json -AsArray
          set-content -Path $path -Value $content
      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin cn
          git branch -f cn ${{ github.sha }}
          git checkout cn
          git add repo.json
          git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
          git push origin cn
  trigger_workflow:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Workflow in DalamudPlugin Repository
        run: |
          repo_owner="MeowZWR"
          repo_name="DalamudPlugin"
          event_type="request-update-run-action"
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.MEOWRSTRIGGER }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"unit\": false, \"integration\": true}}" 
            
